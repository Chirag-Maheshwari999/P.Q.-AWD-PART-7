Get ready to get a big task for this assignment. Ever heard of 'Ping Pong'? You might have; if not go search on the web.
Well, we will be making a smaller and easier version of this game. The main points for the game are -
1. There will be 2 rods at the top and bottom of the screen.
2. Both rods will be controlled with the same keys. In other words, they will move together.
3. When the game starts, an alert should be shown about the highest score and the player who scored it. If there is no such record, say 'this is your first time'.
4. If the score becomes highest, then store the name and max-score in local storage.
5. After every round, when one wins an alert will be displayed showing the winning player and his score.
Screenshots and a small gif is provided but first let us go through some rules for this game -
1. Every round should start when the 'Enter' key is pressed. ( You can use another key as well )
2. The rods will only move horizontally using the 'a' and 'd' keys. ( You can use other keys as well )
3. The losing rod will get the ball for the next match and the rods and ball will move to center.
4. The score will be counted from the start of every match.


HTML PART~

<html><head>
    <title>Ping Pong</title>
</head>
<body>

    <div id="container">

        <div id="ball"></div>
        <div id="rod1">Rod 1</div>
        <div id="rod2">Rod 2</div>

    </div>


</body></html>



CSS PART~


#container {
    position: relative;
}

#ball {
    width: 20px;
    height: 20px;
    background-color: red;
    position: fixed;
    top: 20px;
    left: 52.5%;
    border-radius: 50%;
}

#rod1, #rod2 {
    width: 200px;
    height: 20px;
    position: fixed;
    left: 50%;
    border-radius: 25px;
    text-align: center;
    color: white;
    font-weight: bold;
}

#rod1 {
    background-color: blue;
    top: 0px;    
}

#rod2 {
    background-color: blueviolet;
    bottom: 0px;
}



JAVASCRIPT PART~
var ball = document.getElementById('ball');
var rod1 = document.getElementById('rod1');
var rod2 = document.getElementById('rod2');


const storeName = "PPName";
const storeScore = "PPMaxScore";
const rod1Name = "Rod 1";
const rod2Name = "Rod 2";


let score,
    maxScore,
    movement,
    rod,
    ballSpeedX = 2,
    ballSpeedY = 2;

let gameOn = false;

let windowWidth = window.innerWidth,
    windowHeight = window.innerHeight;



(function () {
    rod = localStorage.getItem(storeName);
    maxScore = localStorage.getItem(storeScore);

    if (rod === "null" || maxScore === "null") {
        alert("This is the first time you are playing this game. LET'S START");
        maxScore = 0;
        rod = "Rod1"
    } else {
        alert(rod + " has maximum score of " + maxScore * 100);
    }

    resetBoard(rod);
})();



function resetBoard(rodName) {

    rod1.style.left = (window.innerWidth - rod1.offsetWidth) / 2 + 'px';
    rod2.style.left = (window.innerWidth - rod2.offsetWidth) / 2 + 'px';
    ball.style.left = (windowWidth - ball.offsetWidth) / 2 + 'px';


    // Lossing player gets the ball
    if (rodName === rod2Name) {
        ball.style.top = (rod1.offsetTop + rod1.offsetHeight) + 'px';
        ballSpeedY = 2;
    } else if (rodName === rod1Name) {
        ball.style.top = (rod2.offsetTop - rod2.offsetHeight) + 'px';
        ballSpeedY = -2;
    }

    score = 0;
    gameOn = false;

}



function storeWin(rod, score) {

    if (score > maxScore) {
        maxScore = score;
        localStorage.setItem(storeName, rod);
        localStorage.setItem(storeScore, maxScore);
    }

    clearInterval(movement);
    resetBoard(rod);

    alert(rod + " wins with a score of " + (score * 100) + ". Max score is: " + (maxScore * 100));

}



window.addEventListener('keypress', function () {
    let rodSpeed = 20;

    let rodRect = rod1.getBoundingClientRect();


    if (event.code === "KeyD" && ((rodRect.x + rodRect.width) < window.innerWidth)) {
        rod1.style.left = (rodRect.x) + rodSpeed + 'px';
        rod2.style.left = rod1.style.left;
    } else if (event.code === "KeyA" && (rodRect.x > 0)) {
        rod1.style.left = (rodRect.x) - rodSpeed + 'px';
        rod2.style.left = rod1.style.left;
    }


    if (event.code === "Enter") {

        if (!gameOn) {
            gameOn = true;
            let ballRect = ball.getBoundingClientRect();
            let ballX = ballRect.x;
            let ballY = ballRect.y;
            let ballDia = ballRect.width;

            let rod1Height = rod1.offsetHeight;
            let rod2Height = rod2.offsetHeight;
            let rod1Width = rod1.offsetWidth;
            let rod2Width = rod2.offsetWidth;


            movement = setInterval(function () {
                // Move ball 
                ballX += ballSpeedX;
                ballY += ballSpeedY;

                rod1X = rod1.getBoundingClientRect().x;
                rod2X = rod2.getBoundingClientRect().x;

                ball.style.left = ballX + 'px';
                ball.style.top = ballY + 'px';


                if ((ballX + ballDia) > windowWidth || ballX < 0) {
                    ballSpeedX = -ballSpeedX; // Reverses the direction
                }

                // It specifies the center of the ball on the viewport
                let ballPos = ballX + ballDia / 2;

                // Check for Rod 1
                if (ballY <= rod1Height) {
                    ballSpeedY = -ballSpeedY; // Reverses the direction
                    score++;

                    // Check if the game ends
                    if ((ballPos < rod1X) || (ballPos > (rod1X + rod1Width))) {
                        storeWin(rod2Name, score);
                    }
                }

                // Check for Rod 2
                else if ((ballY + ballDia) >= (windowHeight - rod2Height)) {
                    ballSpeedY = -ballSpeedY; // Reverses the direction
                    score++;

                    // Check if the game ends
                    if ((ballPos < rod2X) || (ballPos > (rod2X + rod2Width))) {
                        storeWin(rod1Name, score);
                    }
                }

            }, 10);

        }
    }

});
